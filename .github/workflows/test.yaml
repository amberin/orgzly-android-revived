name: Tests

permissions:
  contents: read
  
on:
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - 'README.org'
      - 'metadata/**'
      - 'app/src/main/res/raw-*/*'
      - 'app/src/main/res/values-*/*'
      - '.github/**'
  workflow_dispatch:
  schedule:
    - cron: "03 03 * * sun"

jobs:

  localUnitTests:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Setup Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@9fc6c4e9069bf8d3d10b2204b1fb8f6ef7065407 # v3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@748248ddd2a24f49513d8f472f81c3a07d4d50e1 # v4

      - name: Gradle build Fdroid
        run: ./gradlew assembleFdroidDebug

      - name: Gradle test Fdroid
        run: ./gradlew testFdroidDebugUnitTest

      - name: Add Dropbox API TEST credentials
        shell: bash
        run: |
          echo "dropbox.refresh_token = \"${{ secrets.DROPBOX_TEST_REFRESH_TOKEN }}\"" >> app.properties
          echo "dropbox.app_key = \"${{ secrets.DROPBOX_TEST_APP_KEY }}\"" >> app.properties

      - name: Gradle test Premium
        run: ./gradlew testPremiumDebugUnitTest

  instrumentedTests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # TODO: Run on lowest and highest supported API
        api-level: [29, 35]
        flavor: [Fdroid, Premium]
    steps:
      - name: checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@748248ddd2a24f49513d8f472f81c3a07d4d50e1 # v4

      - name: Restore AVD cache if present
        uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          disable-spellchecker: true
          profile: Nexus 6
          script: echo "Generated AVD snapshot for caching."

      - name: Save AVD to cache
        if: always() && steps.avd-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Add Dropbox API TEST credentials
        shell: bash
        run: |
          echo "dropbox.refresh_token = \"${{ secrets.DROPBOX_TEST_REFRESH_TOKEN }}\"" >> app.properties
          echo "dropbox.app_key = \"${{ secrets.DROPBOX_TEST_APP_KEY }}\"" >> app.properties

      - name: Run instrumented tests
        uses: reactivecircus/android-emulator-runner@1dcd0090116d15e7c562f8db72807de5e036a4ed # v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -metrics-collection
          disable-animations: true
          disable-spellchecker: true
          profile: Nexus 6
          # Tests should use the build which includes Dropbox code.
          script: ./gradlew --no-configuration-cache connected${{matrix.flavor}}DebugAndroidTest --no-watch-fs --build-cache --info || { ./gradlew pullScreenshot; exit 1; }

      - name: Upload screenshot
        if: failure()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: screenshot
          path: ./build/fail-screenshot-*.png
          if-no-files-found: ignore
